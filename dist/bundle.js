!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=1)}([function(t,e,r){"use strict";var n=Array.isArray,o=Object.keys,a=Object.prototype.hasOwnProperty;t.exports=function t(e,r){if(e===r)return!0;if(e&&r&&"object"==typeof e&&"object"==typeof r){var i,p,s,c=n(e),u=n(r);if(c&&u){if((p=e.length)!=r.length)return!1;for(i=p;0!=i--;)if(!t(e[i],r[i]))return!1;return!0}if(c!=u)return!1;var f=e instanceof Date,d=r instanceof Date;if(f!=d)return!1;if(f&&d)return e.getTime()==r.getTime();var y=e instanceof RegExp,h=r instanceof RegExp;if(y!=h)return!1;if(y&&h)return e.toString()==r.toString();var l=o(e);if((p=l.length)!==o(r).length)return!1;for(i=p;0!=i--;)if(!a.call(r,l[i]))return!1;for(i=p;0!=i--;)if(!t(e[s=l[i]],r[s]))return!1;return!0}return e!=e&&r!=r}},function(t,e,r){"use strict";r.r(e);var n=function(){return(n=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},o=function(t){if(!t.object)throw new TypeError("cannot create node with missing type");switch(t.object){case"document":case"block":case"inline":return n({},t,{nodes:t.nodes&&t.nodes.map(o)});case"text":return n({},t,{text:t.text?Array.from(t.text):[],marks:t.marks||[]})}},a=function(t){return o(t)},i=function(t,e){return e.reduce(function(r,n){if(!function(t){return"text"!==t.object}(r)||!r.nodes)throw new TypeError("path "+e.toString()+" does not match tree "+JSON.stringify(t));return r.nodes[n]},t)},p=function(t,e,r){void 0===r&&(r=1);var n=s(e,r),o=n[0],a=n[1];return[i(t,a),o]},s=function(t,e){if(void 0===e&&(e=1),e>t.length)throw new TypeError("requested ancestor is higher than root");return[t[t.length-e],t.slice(0,t.length-e)]},c=function(t){if("string"==typeof t)throw new TypeError("cannot handle key-based paths");return"number"==typeof t?[t]:Array.isArray(t)?t:t.toJS()},u=function(t){var e={};return t.type&&(e.type=t.type),t.data&&(e.data=t.data&&(t.data.toJSON?t.data.toJSON():t.data)),e},f=function(){return(f=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},d=function(t,e){var r=p(t,e.path),n=r[0],o=r[1];if("text"===n.object)throw new TypeError("cannot insert node into text node");return n.nodes.splice(o,0,e.node),t},y=function(t,e){var r=p(t,e.path),n=r[0],o=r[1];if("text"===n.object)throw new TypeError("cannot remove node from text node");return n.nodes.splice(o,1),t},h=function(t,e){var r,n,o=i(t,e.path),a=i(t,function(t){var e=s(t),r=e[0],n=e[1],o=r-1;if(o<0)throw new TypeError("node at path "+t+" has no sibling before it");return n.concat([o])}(e.path));if(o.object!==a.object)throw new TypeError("cannot merge nodes of differing types "+o.object+" and "+a.object);return"text"===a.object?(r=a.text).push.apply(r,o.text):a.nodes&&o.nodes&&(n=a.nodes).push.apply(n,o.nodes),y(t,{type:"remove_node",path:e.path})},l=r(0),m=r.n(l),w=function(){return(w=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},x=function(t,e){var r=function(t){switch(t.type){case"insert_text":return{type:t.type,offset:t.offset,text:t.text,path:c(t.path),marks:t.marks?t.marks.map(function(t){return t.toJSON()}):[]};case"remove_text":return{type:t.type,offset:t.offset,text:t.text,path:c(t.path)};case"insert_node":return{type:t.type,path:c(t.path),node:o(t.node.toJSON())};case"move_node":return{type:t.type,path:c(t.path),newPath:c(t.newPath)};case"remove_node":return{type:t.type,path:c(t.path)};case"split_node":return{type:t.type,path:c(t.path),position:t.position,properties:t.properties};case"merge_node":return{type:t.type,path:c(t.path)};case"add_mark":case"remove_mark":return{type:t.type,path:c(t.path),mark:t.mark.toJSON()};case"set_node":return{type:t.type,path:c(t.path),newProperties:t.newProperties};case"set_mark":return{type:t.type,path:c(t.path),properties:u(t.properties),newProperties:u(t.newProperties)};case"set_selection":case"set_value":return null}}(e);if(!r)return t;switch(r.type){case"insert_text":return function(t,e){var r,n=i(t,e.path);if("text"!==n.object)throw new TypeError("did not get text node at path");return(r=n.text).splice.apply(r,[e.offset,0].concat(Array.from(e.text))),t}(t,r);case"remove_text":return function(t,e){var r=i(t,e.path);if("text"!==r.object)throw new TypeError("did not get text node at path");return r.text.splice(e.offset,Array.from(e.text).length),t}(t,r);case"insert_node":return d(t,r);case"move_node":return function(t,e){var r,n=p(t,e.path),o=n[0],a=n[1],i=p(t,e.newPath),s=i[0],c=i[1];if("text"===o.object||"text"===s.object)throw new TypeError("cannot move node as child of a text node");return(r=s.nodes).splice.apply(r,[c,0].concat(o.nodes.splice(a,1))),t}(t,r);case"remove_node":return y(t,r);case"split_node":return function(t,e){var r,n,o,a,p=i(t,e.path);return r="text"===p.object?{object:"text",text:p.text.splice(e.position),marks:Array.from(p.marks)}:f({},p,{nodes:p.nodes.splice(e.position)}),d(t,{type:"insert_node",path:(n=e.path,o=s(n),a=o[0],o[1].concat([a+1])),node:r})}(t,r);case"merge_node":return h(t,r);case"set_node":return function(t,e){var r=i(t,e.path),n=e.newProperties,o=n.type,a=n.data;if(o&&(r.type=o),"text"!==r.object&&a){var p=a.toJSON?a.toJSON():f({},a);r.data=p}return t}(t,r);case"add_mark":return function(t,e){var r=i(t,e.path);if("text"!==r.object)throw new TypeError("cannot set marks on non-text node");return r.marks.findIndex(function(t){return t.type===e.mark.type&&m()(t.data,e.mark.data)})>-1?t:(r.marks.push(e.mark),t)}(t,r);case"remove_mark":return function(t,e){var r=i(t,e.path);if("text"!==r.object)throw new TypeError("cannot set marks on non-text node");var n=r.marks.findIndex(function(t){return t.type===e.mark.type&&m()(t.data,e.mark.data)});return-1===n?t:(r.marks.splice(n,1),t)}(t,r);case"set_mark":return function(t,e){var r=i(t,e.path);if("text"!==r.object)throw new TypeError("cannot set marks on non-text node");var n=r.marks.findIndex(function(t){return t.type===e.properties.type&&m()(t.data,e.properties.data)});if(-1===n){if(console.warn("did not find old mark with properties",e.properties),!e.newProperties.type)throw new TypeError("no old mark, and new mark missing type");r.marks.push(w({object:"mark",type:e.newProperties.type},e.newProperties))}else r.marks[n]=w({object:"mark"},r.marks[n],e.newProperties);return t}(t,r)}throw new TypeError("invalid op")},b=function(){return(b=Object.assign||function(t){for(var e,r=1,n=arguments.length;r<n;r++)for(var o in e=arguments[r])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},v=function(t){if(!t.object)throw new TypeError("cannot create node with missing type");switch(t.object){case"document":case"block":case"inline":return b({},t,{nodes:t.nodes&&t.nodes.map(v)});case"text":return b({},t,{text:t.text.join("")})}},j=function(t){return v(t)};r.d(e,"applyOperation",function(){return x}),r.d(e,"toSyncDocument",function(){return a}),r.d(e,"toSlateDocument",function(){return j})}]);
//# sourceMappingURL=bundle.js.map